Index.PACKAGES = {"checkers" : [{"name" : "checkers.Board", "shortDescription" : "Class containing board for checkers and functions for applying moves", "members_class" : [{"label" : "removeNonJumpsIfNeeded", "tail" : "(list: List[List[List[Move]]]): List[List[List[Move]]]", "member" : "checkers.Board.removeNonJumpsIfNeeded", "link" : "checkers\/Board.html#removeNonJumpsIfNeeded(list:List[List[List[checkers.findingNextMove.Move]]]):List[List[List[checkers.findingNextMove.Move]]]", "kind" : "def"}, {"label" : "checkIfRemovingNeeded", "tail" : "(list: List[List[List[Move]]]): Boolean", "member" : "checkers.Board.checkIfRemovingNeeded", "link" : "checkers\/Board.html#checkIfRemovingNeeded(list:List[List[List[checkers.findingNextMove.Move]]]):Boolean", "kind" : "def"}, {"label" : "heuristic", "tail" : "(): Int", "member" : "checkers.Board.heuristic", "link" : "checkers\/Board.html#heuristic():Int", "kind" : "def"}, {"label" : "createStringMove", "tail" : "(moves: List[Move]): String", "member" : "checkers.Board.createStringMove", "link" : "checkers\/Board.html#createStringMove(moves:List[checkers.findingNextMove.Move]):String", "kind" : "def"}, {"label" : "getAllPossibleMovesOfType", "tail" : "(color: Type): List[String]", "member" : "checkers.Board.getAllPossibleMovesOfType", "link" : "checkers\/Board.html#getAllPossibleMovesOfType(color:checkers.Type.Type):List[String]", "kind" : "def"}, {"label" : "getAllPossibleMoves", "tail" : "(color: Type): List[String]", "member" : "checkers.Board.getAllPossibleMoves", "link" : "checkers\/Board.html#getAllPossibleMoves(color:checkers.Type.Type):List[String]", "kind" : "def"}, {"label" : "getAllMoveSetsForColor", "tail" : "(color: Type): List[MoveSet]", "member" : "checkers.Board.getAllMoveSetsForColor", "link" : "checkers\/Board.html#getAllMoveSetsForColor(color:checkers.Type.Type):List[checkers.findingNextMove.MoveSet]", "kind" : "def"}, {"label" : "printAllMoveSetsForColor", "tail" : "(color: Type): Unit", "member" : "checkers.Board.printAllMoveSetsForColor", "link" : "checkers\/Board.html#printAllMoveSetsForColor(color:checkers.Type.Type):Unit", "kind" : "def"}, {"label" : "isFinished", "tail" : "(color: Type): Boolean", "member" : "checkers.Board.isFinished", "link" : "checkers\/Board.html#isFinished(color:checkers.Type.Type):Boolean", "kind" : "def"}, {"label" : "printBoard", "tail" : "(): Unit", "member" : "checkers.Board.printBoard", "link" : "checkers\/Board.html#printBoard():Unit", "kind" : "def"}, {"label" : "removeTile", "tail" : "(i: Int, j: Int): Unit", "member" : "checkers.Board.removeTile", "link" : "checkers\/Board.html#removeTile(i:Int,j:Int):Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(x: Int, y: Int): Element", "member" : "checkers.Board.getElement", "link" : "checkers\/Board.html#getElement(x:Int,y:Int):checkers.Element", "kind" : "def"}, {"label" : "getNumberOfElems", "tail" : "(mType: Type): Int", "member" : "checkers.Board.getNumberOfElems", "link" : "checkers\/Board.html#getNumberOfElems(mType:checkers.Type.Type):Int", "kind" : "def"}, {"label" : "checkIfChangeToQueen", "tail" : "(i: Int, j: Int, value: Type): Unit", "member" : "checkers.Board.checkIfChangeToQueen", "link" : "checkers\/Board.html#checkIfChangeToQueen(i:Int,j:Int,value:checkers.Type.Type):Unit", "kind" : "def"}, {"label" : "makeMove", "tail" : "(moves: (String, String)): Unit", "member" : "checkers.Board.makeMove", "link" : "checkers\/Board.html#makeMove(moves:(String,String)):Unit", "kind" : "def"}, {"label" : "makeMoveSequence", "tail" : "(moves: String): Unit", "member" : "checkers.Board.makeMoveSequence", "link" : "checkers\/Board.html#makeMoveSequence(moves:String):Unit", "kind" : "def"}, {"label" : "checkIfMoveCorrect", "tail" : "(moves: String, color: Type): Boolean", "member" : "checkers.Board.checkIfMoveCorrect", "link" : "checkers\/Board.html#checkIfMoveCorrect(moves:String,color:checkers.Type.Type):Boolean", "kind" : "def"}, {"label" : "setUpBoardCopy", "tail" : "(board: Board): Unit", "member" : "checkers.Board.setUpBoardCopy", "link" : "checkers\/Board.html#setUpBoardCopy(board:checkers.Board):Unit", "kind" : "def"}, {"label" : "setUpBoard", "tail" : "(): Unit", "member" : "checkers.Board.setUpBoard", "link" : "checkers\/Board.html#setUpBoard():Unit", "kind" : "def"}, {"label" : "board", "tail" : ": Array[Array[Element]]", "member" : "checkers.Board.board", "link" : "checkers\/Board.html#board:Array[Array[checkers.Element]]", "kind" : "val"}, {"member" : "checkers.Board#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/Board.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/Board.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/Board.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/Board.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/Board.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/Board.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/Board.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Board.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Board.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Board.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/Board.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/Board.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "checkers\/Board.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/Board.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "checkers\/Board.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "checkers\/Board.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/Board.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/Board.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/Board.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "checkers\/Board.html", "kind" : "class"}, {"name" : "checkers.Element", "shortDescription" : "Class representing checker", "members_case class" : [{"label" : "printElement", "tail" : "(): String", "member" : "checkers.Element.printElement", "link" : "checkers\/Element.html#printElement():String", "kind" : "def"}, {"member" : "checkers.Element#<init>", "error" : "unsupported entity"}, {"label" : "posY", "tail" : ": Int", "member" : "checkers.Element.posY", "link" : "checkers\/Element.html#posY:Int", "kind" : "val"}, {"label" : "posX", "tail" : ": Int", "member" : "checkers.Element.posX", "link" : "checkers\/Element.html#posX:Int", "kind" : "val"}, {"label" : "elementType", "tail" : ": Type", "member" : "checkers.Element.elementType", "link" : "checkers\/Element.html#elementType:checkers.Type.Type", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/Element.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/Element.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/Element.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/Element.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/Element.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/Element.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/Element.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Element.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Element.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Element.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/Element.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/Element.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/Element.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/Element.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/Element.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/Element.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "checkers\/Element.html", "kind" : "case class"}, {"name" : "checkers.NegaScout", "shortDescription" : "Class implementing NegaScout algorithm", "members_class" : [{"label" : "countScoreForEach", "tail" : "(nodes: Seq[Node], index: Int, depth: Int, a: Int, b: Int, color: Int): Int", "member" : "checkers.NegaScout.countScoreForEach", "link" : "checkers\/NegaScout.html#countScoreForEach(nodes:Seq[checkers.Node],index:Int,depth:Int,a:Int,b:Int,color:Int):Int", "kind" : "final def"}, {"label" : "ns", "tail" : "(node: Node, depth: Int, a: Int, b: Int, color: Int): Int", "member" : "checkers.NegaScout.ns", "link" : "checkers\/NegaScout.html#ns(node:checkers.Node,depth:Int,a:Int,b:Int,color:Int):Int", "kind" : "def"}, {"label" : "buildTree", "tail" : "(board: Board): Tree", "member" : "checkers.NegaScout.buildTree", "link" : "checkers\/NegaScout.html#buildTree(board:checkers.Board):checkers.Tree", "kind" : "def"}, {"label" : "getBestMove", "tail" : "(board: Board): String", "member" : "checkers.NegaScout.getBestMove", "link" : "checkers\/NegaScout.html#getBestMove(board:checkers.Board):String", "kind" : "def"}, {"member" : "checkers.NegaScout#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/NegaScout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/NegaScout.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/NegaScout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/NegaScout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/NegaScout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/NegaScout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/NegaScout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/NegaScout.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/NegaScout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/NegaScout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/NegaScout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/NegaScout.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "checkers\/NegaScout.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/NegaScout.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "checkers\/NegaScout.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "checkers\/NegaScout.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/NegaScout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/NegaScout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/NegaScout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "checkers\/NegaScout.html", "kind" : "class"}, {"name" : "checkers.Node", "shortDescription" : "", "members_case class" : [{"label" : "children", "tail" : ": Seq[Node]", "member" : "checkers.Node.children", "link" : "checkers\/Node.html#children:Seq[checkers.Node]", "kind" : "val"}, {"label" : "next", "tail" : ": Type.Value", "member" : "checkers.Node.next", "link" : "checkers\/Node.html#next:checkers.Type.Value", "kind" : "val"}, {"label" : "maxLevel", "tail" : ": Int", "member" : "checkers.Node.maxLevel", "link" : "checkers\/Node.html#maxLevel:Int", "kind" : "val"}, {"member" : "checkers.Node#<init>", "error" : "unsupported entity"}, {"label" : "colour", "tail" : ": Type", "member" : "checkers.Node.colour", "link" : "checkers\/Node.html#colour:checkers.Type.Type", "kind" : "val"}, {"label" : "level", "tail" : ": Int", "member" : "checkers.Node.level", "link" : "checkers\/Node.html#level:Int", "kind" : "val"}, {"label" : "parent", "tail" : ": Node", "member" : "checkers.Node.parent", "link" : "checkers\/Node.html#parent:checkers.Node", "kind" : "val"}, {"label" : "boardMove", "tail" : ": (Board, String)", "member" : "checkers.Node.boardMove", "link" : "checkers\/Node.html#boardMove:(checkers.Board,String)", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/Node.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/Node.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/Node.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/Node.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/Node.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/Node.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/Node.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Node.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Node.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Node.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/Node.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/Node.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/Node.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/Node.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/Node.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/Node.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "checkers\/Node.html", "kind" : "case class"}, {"name" : "checkers.StartUp", "shortDescription" : "StartUp object for running the program", "object" : "checkers\/StartUp$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "checkers.StartUp.main", "link" : "checkers\/StartUp$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/StartUp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/StartUp$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/StartUp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/StartUp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/StartUp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/StartUp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/StartUp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/StartUp$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/StartUp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/StartUp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/StartUp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/StartUp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "checkers\/StartUp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/StartUp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "checkers\/StartUp$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "checkers\/StartUp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/StartUp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/StartUp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/StartUp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "checkers.Tree", "shortDescription" : "Tree for NegaScout algorithm", "members_case class" : [{"member" : "checkers.Tree#<init>", "error" : "unsupported entity"}, {"label" : "head", "tail" : ": Node", "member" : "checkers.Tree.head", "link" : "checkers\/Tree.html#head:checkers.Node", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/Tree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/Tree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/Tree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/Tree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/Tree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/Tree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/Tree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Tree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Tree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Tree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/Tree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/Tree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/Tree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/Tree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/Tree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/Tree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "checkers\/Tree.html", "kind" : "case class"}, {"name" : "checkers.Type", "shortDescription" : "", "object" : "checkers\/Type$.html", "members_object" : [{"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "checkers\/Type$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "checkers\/Type$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "checkers\/Type$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "error", "tail" : ": Value", "member" : "checkers.Type.error", "link" : "checkers\/Type$.html#error:checkers.Type.Value", "kind" : "val"}, {"label" : "empty", "tail" : ": Value", "member" : "checkers.Type.empty", "link" : "checkers\/Type$.html#empty:checkers.Type.Value", "kind" : "val"}, {"label" : "blackQueen", "tail" : ": Value", "member" : "checkers.Type.blackQueen", "link" : "checkers\/Type$.html#blackQueen:checkers.Type.Value", "kind" : "val"}, {"label" : "black", "tail" : ": Value", "member" : "checkers.Type.black", "link" : "checkers\/Type$.html#black:checkers.Type.Value", "kind" : "val"}, {"label" : "whiteQueen", "tail" : ": Value", "member" : "checkers.Type.whiteQueen", "link" : "checkers\/Type$.html#whiteQueen:checkers.Type.Value", "kind" : "val"}, {"label" : "white", "tail" : ": Value", "member" : "checkers.Type.white", "link" : "checkers\/Type$.html#white:checkers.Type.Value", "kind" : "val"}, {"label" : "Type", "tail" : "", "member" : "checkers.Type.Type", "link" : "checkers\/Type$.html#Type=checkers.Type.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "checkers\/Type$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "checkers\/Type$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "checkers\/Type$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "checkers\/Type$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "checkers\/Type$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "checkers\/Type$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "checkers\/Type$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "checkers\/Type$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "checkers\/Type$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "checkers\/Type$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "checkers\/Type$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "checkers\/Type$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/Type$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/Type$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/Type$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/Type$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/Type$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/Type$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/Type$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Type$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Type$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/Type$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/Type$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/Type$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/Type$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "checkers\/Type$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "checkers\/Type$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/Type$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/Type$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/Type$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "checkers.findingNextMove" : [{"name" : "checkers.findingNextMove.Move", "shortDescription" : "Class describing a move", "members_case class" : [{"member" : "checkers.findingNextMove.Move#<init>", "error" : "unsupported entity"}, {"label" : "valid", "tail" : ": Boolean", "member" : "checkers.findingNextMove.Move.valid", "link" : "checkers\/findingNextMove\/Move.html#valid:Boolean", "kind" : "val"}, {"label" : "jumpOver", "tail" : ": (Int, Int)", "member" : "checkers.findingNextMove.Move.jumpOver", "link" : "checkers\/findingNextMove\/Move.html#jumpOver:(Int,Int)", "kind" : "val"}, {"label" : "jump", "tail" : ": Boolean", "member" : "checkers.findingNextMove.Move.jump", "link" : "checkers\/findingNextMove\/Move.html#jump:Boolean", "kind" : "val"}, {"label" : "end", "tail" : ": (Int, Int)", "member" : "checkers.findingNextMove.Move.end", "link" : "checkers\/findingNextMove\/Move.html#end:(Int,Int)", "kind" : "var"}, {"label" : "start", "tail" : ": (Int, Int)", "member" : "checkers.findingNextMove.Move.start", "link" : "checkers\/findingNextMove\/Move.html#start:(Int,Int)", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/findingNextMove\/Move.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/findingNextMove\/Move.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/findingNextMove\/Move.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/findingNextMove\/Move.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/findingNextMove\/Move.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/findingNextMove\/Move.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/findingNextMove\/Move.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/findingNextMove\/Move.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/findingNextMove\/Move.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/findingNextMove\/Move.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/findingNextMove\/Move.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/findingNextMove\/Move.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/findingNextMove\/Move.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/findingNextMove\/Move.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/findingNextMove\/Move.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/findingNextMove\/Move.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "checkers\/findingNextMove\/Move.html", "kind" : "case class"}, {"name" : "checkers.findingNextMove.MoveSet", "shortDescription" : "Class which is used for finding possible moves for game pieces.", "members_class" : [{"label" : "generateSettings", "tail" : "(): Settings", "member" : "checkers.findingNextMove.MoveSet.generateSettings", "link" : "checkers\/findingNextMove\/MoveSet.html#generateSettings():checkers.parameterCaseClasses.Settings", "kind" : "def"}, {"label" : "check", "tail" : "(position: (Int, Int), testBoard: Board): Type", "member" : "checkers.findingNextMove.MoveSet.check", "link" : "checkers\/findingNextMove\/MoveSet.html#check(position:(Int,Int),testBoard:checkers.Board):checkers.Type.Type", "kind" : "def"}, {"label" : "translateTupleToString", "tail" : "(mv: Move): (String, String)", "member" : "checkers.findingNextMove.MoveSet.translateTupleToString", "link" : "checkers\/findingNextMove\/MoveSet.html#translateTupleToString(mv:checkers.findingNextMove.Move):(String,String)", "kind" : "def"}, {"label" : "translateMoveToString", "tail" : "(mv: Move): (String, String)", "member" : "checkers.findingNextMove.MoveSet.translateMoveToString", "link" : "checkers\/findingNextMove\/MoveSet.html#translateMoveToString(mv:checkers.findingNextMove.Move):(String,String)", "kind" : "def"}, {"label" : "commitMove", "tail" : "(mv: Move, board: Board): (Element, Board)", "member" : "checkers.findingNextMove.MoveSet.commitMove", "link" : "checkers\/findingNextMove\/MoveSet.html#commitMove(mv:checkers.findingNextMove.Move,board:checkers.Board):(checkers.Element,checkers.Board)", "kind" : "def"}, {"label" : "findNextMoveSet", "tail" : "(): List[MoveSet]", "member" : "checkers.findingNextMove.MoveSet.findNextMoveSet", "link" : "checkers\/findingNextMove\/MoveSet.html#findNextMoveSet():List[checkers.findingNextMove.MoveSet]", "kind" : "def"}, {"label" : "findNextMove", "tail" : "(): Array[Move]", "member" : "checkers.findingNextMove.MoveSet.findNextMove", "link" : "checkers\/findingNextMove\/MoveSet.html#findNextMove():Array[checkers.findingNextMove.Move]", "kind" : "def"}, {"label" : "findNextJump", "tail" : "(): Array[Move]", "member" : "checkers.findingNextMove.MoveSet.findNextJump", "link" : "checkers\/findingNextMove\/MoveSet.html#findNextJump():Array[checkers.findingNextMove.Move]", "kind" : "def"}, {"label" : "findQueenNextMove", "tail" : "(): List[List[Move]]", "member" : "checkers.findingNextMove.MoveSet.findQueenNextMove", "link" : "checkers\/findingNextMove\/MoveSet.html#findQueenNextMove():List[List[checkers.findingNextMove.Move]]", "kind" : "def"}, {"label" : "jmpsToList", "tail" : "(): List[List[Move]]", "member" : "checkers.findingNextMove.MoveSet.jmpsToList", "link" : "checkers\/findingNextMove\/MoveSet.html#jmpsToList():List[List[checkers.findingNextMove.Move]]", "kind" : "def"}, {"label" : "movesToList", "tail" : "(): List[List[Move]]", "member" : "checkers.findingNextMove.MoveSet.movesToList", "link" : "checkers\/findingNextMove\/MoveSet.html#movesToList():List[List[checkers.findingNextMove.Move]]", "kind" : "def"}, {"label" : "findManNextMove", "tail" : "(): List[List[Move]]", "member" : "checkers.findingNextMove.MoveSet.findManNextMove", "link" : "checkers\/findingNextMove\/MoveSet.html#findManNextMove():List[List[checkers.findingNextMove.Move]]", "kind" : "def"}, {"label" : "possibleMoves", "tail" : "(): List[List[Move]]", "member" : "checkers.findingNextMove.MoveSet.possibleMoves", "link" : "checkers\/findingNextMove\/MoveSet.html#possibleMoves():List[List[checkers.findingNextMove.Move]]", "kind" : "def"}, {"label" : "removeNull", "tail" : "(list: List[List[Move]]): List[List[Move]]", "member" : "checkers.findingNextMove.MoveSet.removeNull", "link" : "checkers\/findingNextMove\/MoveSet.html#removeNull(list:List[List[checkers.findingNextMove.Move]]):List[List[checkers.findingNextMove.Move]]", "kind" : "def"}, {"label" : "removeEmpty", "tail" : "(list: List[List[Move]]): List[List[Move]]", "member" : "checkers.findingNextMove.MoveSet.removeEmpty", "link" : "checkers\/findingNextMove\/MoveSet.html#removeEmpty(list:List[List[checkers.findingNextMove.Move]]):List[List[checkers.findingNextMove.Move]]", "kind" : "def"}, {"label" : "printPossibleMoves", "tail" : "(): Unit", "member" : "checkers.findingNextMove.MoveSet.printPossibleMoves", "link" : "checkers\/findingNextMove\/MoveSet.html#printPossibleMoves():Unit", "kind" : "def"}, {"label" : "root", "tail" : ": List[MoveSet]", "member" : "checkers.findingNextMove.MoveSet.root", "link" : "checkers\/findingNextMove\/MoveSet.html#root:List[checkers.findingNextMove.MoveSet]", "kind" : "val"}, {"label" : "settings", "tail" : ": Settings", "member" : "checkers.findingNextMove.MoveSet.settings", "link" : "checkers\/findingNextMove\/MoveSet.html#settings:checkers.parameterCaseClasses.Settings", "kind" : "val"}, {"member" : "checkers.findingNextMove.MoveSet#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/findingNextMove\/MoveSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/findingNextMove\/MoveSet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/findingNextMove\/MoveSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/findingNextMove\/MoveSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/findingNextMove\/MoveSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/findingNextMove\/MoveSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/findingNextMove\/MoveSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/findingNextMove\/MoveSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/findingNextMove\/MoveSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/findingNextMove\/MoveSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/findingNextMove\/MoveSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/findingNextMove\/MoveSet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "checkers\/findingNextMove\/MoveSet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/findingNextMove\/MoveSet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "checkers\/findingNextMove\/MoveSet.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "checkers\/findingNextMove\/MoveSet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/findingNextMove\/MoveSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/findingNextMove\/MoveSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/findingNextMove\/MoveSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "checkers\/findingNextMove\/MoveSet.html", "kind" : "class"}], "checkers.parameterCaseClasses" : [{"name" : "checkers.parameterCaseClasses.Settings", "shortDescription" : "Settings, class which stores settings, such us position, enemy types, next move position etc.", "members_case class" : [{"label" : "checkedJmpPR", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.checkedJmpPR", "link" : "checkers\/parameterCaseClasses\/Settings.html#checkedJmpPR:checkers.Type.Type", "kind" : "val"}, {"label" : "checkedJmpPL", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.checkedJmpPL", "link" : "checkers\/parameterCaseClasses\/Settings.html#checkedJmpPL:checkers.Type.Type", "kind" : "val"}, {"label" : "checkedJmpNR", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.checkedJmpNR", "link" : "checkers\/parameterCaseClasses\/Settings.html#checkedJmpNR:checkers.Type.Type", "kind" : "val"}, {"label" : "checkedJmpNL", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.checkedJmpNL", "link" : "checkers\/parameterCaseClasses\/Settings.html#checkedJmpNL:checkers.Type.Type", "kind" : "val"}, {"label" : "checkedMPR", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.checkedMPR", "link" : "checkers\/parameterCaseClasses\/Settings.html#checkedMPR:checkers.Type.Type", "kind" : "val"}, {"label" : "checkedMPL", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.checkedMPL", "link" : "checkers\/parameterCaseClasses\/Settings.html#checkedMPL:checkers.Type.Type", "kind" : "val"}, {"label" : "checkedMNR", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.checkedMNR", "link" : "checkers\/parameterCaseClasses\/Settings.html#checkedMNR:checkers.Type.Type", "kind" : "val"}, {"label" : "checkedMNL", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.checkedMNL", "link" : "checkers\/parameterCaseClasses\/Settings.html#checkedMNL:checkers.Type.Type", "kind" : "val"}, {"label" : "pozJmpPR", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.pozJmpPR", "link" : "checkers\/parameterCaseClasses\/Settings.html#pozJmpPR:(Int,Int)", "kind" : "val"}, {"label" : "pozJmpPL", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.pozJmpPL", "link" : "checkers\/parameterCaseClasses\/Settings.html#pozJmpPL:(Int,Int)", "kind" : "val"}, {"label" : "pozJmpNR", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.pozJmpNR", "link" : "checkers\/parameterCaseClasses\/Settings.html#pozJmpNR:(Int,Int)", "kind" : "val"}, {"label" : "pozJmpNL", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.pozJmpNL", "link" : "checkers\/parameterCaseClasses\/Settings.html#pozJmpNL:(Int,Int)", "kind" : "val"}, {"label" : "pozMPR", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.pozMPR", "link" : "checkers\/parameterCaseClasses\/Settings.html#pozMPR:(Int,Int)", "kind" : "val"}, {"label" : "pozMPL", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.pozMPL", "link" : "checkers\/parameterCaseClasses\/Settings.html#pozMPL:(Int,Int)", "kind" : "val"}, {"label" : "pozMNR", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.pozMNR", "link" : "checkers\/parameterCaseClasses\/Settings.html#pozMNR:(Int,Int)", "kind" : "val"}, {"label" : "pozMNL", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.pozMNL", "link" : "checkers\/parameterCaseClasses\/Settings.html#pozMNL:(Int,Int)", "kind" : "val"}, {"label" : "PL", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.PL", "link" : "checkers\/parameterCaseClasses\/Settings.html#PL:(Int,Int)", "kind" : "val"}, {"label" : "PR", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.PR", "link" : "checkers\/parameterCaseClasses\/Settings.html#PR:(Int,Int)", "kind" : "val"}, {"label" : "NL", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.NL", "link" : "checkers\/parameterCaseClasses\/Settings.html#NL:(Int,Int)", "kind" : "val"}, {"label" : "NR", "tail" : ": (Int, Int)", "member" : "checkers.parameterCaseClasses.Settings.NR", "link" : "checkers\/parameterCaseClasses\/Settings.html#NR:(Int,Int)", "kind" : "val"}, {"label" : "nextColumnR", "tail" : ": Int", "member" : "checkers.parameterCaseClasses.Settings.nextColumnR", "link" : "checkers\/parameterCaseClasses\/Settings.html#nextColumnR:Int", "kind" : "val"}, {"label" : "nextColumnL", "tail" : ": Int", "member" : "checkers.parameterCaseClasses.Settings.nextColumnL", "link" : "checkers\/parameterCaseClasses\/Settings.html#nextColumnL:Int", "kind" : "val"}, {"label" : "previousRow", "tail" : ": Int", "member" : "checkers.parameterCaseClasses.Settings.previousRow", "link" : "checkers\/parameterCaseClasses\/Settings.html#previousRow:Int", "kind" : "val"}, {"label" : "nextRow", "tail" : ": Int", "member" : "checkers.parameterCaseClasses.Settings.nextRow", "link" : "checkers\/parameterCaseClasses\/Settings.html#nextRow:Int", "kind" : "val"}, {"member" : "checkers.parameterCaseClasses.Settings#<init>", "error" : "unsupported entity"}, {"label" : "selfQ", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.selfQ", "link" : "checkers\/parameterCaseClasses\/Settings.html#selfQ:checkers.Type.Type", "kind" : "val"}, {"label" : "self", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.self", "link" : "checkers\/parameterCaseClasses\/Settings.html#self:checkers.Type.Type", "kind" : "val"}, {"label" : "direction", "tail" : ": Int", "member" : "checkers.parameterCaseClasses.Settings.direction", "link" : "checkers\/parameterCaseClasses\/Settings.html#direction:Int", "kind" : "val"}, {"label" : "otherQ", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.otherQ", "link" : "checkers\/parameterCaseClasses\/Settings.html#otherQ:checkers.Type.Type", "kind" : "val"}, {"label" : "other", "tail" : ": Type", "member" : "checkers.parameterCaseClasses.Settings.other", "link" : "checkers\/parameterCaseClasses\/Settings.html#other:checkers.Type.Type", "kind" : "val"}, {"label" : "element", "tail" : ": Element", "member" : "checkers.parameterCaseClasses.Settings.element", "link" : "checkers\/parameterCaseClasses\/Settings.html#element:checkers.Element", "kind" : "val"}, {"label" : "moveSet", "tail" : ": MoveSet", "member" : "checkers.parameterCaseClasses.Settings.moveSet", "link" : "checkers\/parameterCaseClasses\/Settings.html#moveSet:checkers.findingNextMove.MoveSet", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "checkers\/parameterCaseClasses\/Settings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "checkers\/parameterCaseClasses\/Settings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "checkers\/parameterCaseClasses\/Settings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "checkers\/parameterCaseClasses\/Settings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "checkers\/parameterCaseClasses\/Settings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "checkers\/parameterCaseClasses\/Settings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "checkers\/parameterCaseClasses\/Settings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/parameterCaseClasses\/Settings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/parameterCaseClasses\/Settings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "checkers\/parameterCaseClasses\/Settings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "checkers\/parameterCaseClasses\/Settings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "checkers\/parameterCaseClasses\/Settings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "checkers\/parameterCaseClasses\/Settings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "checkers\/parameterCaseClasses\/Settings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "checkers\/parameterCaseClasses\/Settings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "checkers\/parameterCaseClasses\/Settings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "checkers\/parameterCaseClasses\/Settings.html", "kind" : "case class"}]};